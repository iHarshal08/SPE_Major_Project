- name: Ensure Minikube is running
  shell: |
    minikube status || minikube start

- name: Apply all Kubernetes manifests
  shell: kubectl apply -f {{ k8s_dir }}
  register: kubectl_apply
  failed_when: kubectl_apply.rc != 0

- name: Wait for all pods to be ready
  shell: kubectl wait --namespace {{ k8s_namespace }} --for=condition=Ready pod --all --timeout=180s
  register: wait_pods
  failed_when: wait_pods.rc != 0

- name: Get MySQL pod name
  shell: kubectl get pods -n {{ k8s_namespace }} -l app=mysql -o jsonpath='{.items[0].metadata.name}'
  register: mysql_pod
  failed_when: mysql_pod.stdout == ""

- name: Wait for MySQL server readiness
  shell: |
    until kubectl exec -n {{ k8s_namespace }} {{ mysql_pod.stdout }} -- mysqladmin ping -u root -p{{ mysql_password }} -h 127.0.0.1 --silent; do
      echo "Waiting for MySQL to be up..."
      sleep 5
    done
  retries: 24
  delay: 5
  register: mysql_ping
  until: mysql_ping.rc == 0

- name: Run MySQL initialization script inside pod by piping SQL content
  shell: cat {{ playbook_dir }}/../initialize.sql | kubectl exec -i -n {{ k8s_namespace }} {{ mysql_pod.stdout }} -- mysql -u root -p{{ mysql_password }} -h 127.0.0.1 chat
  register: run_sql
  failed_when: run_sql.rc != 0